<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAKBEAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6YEC/blhGW2pUSx9uWEcDblhHA2pUSx9uW
        EZbemBAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqWEYvblhG225URTd2VEFLclxJz3JcSc92V
        EFLblRFN25YRttqWEYsAAAAAAAAAAAAAAAAAAAAAAAAAANuVEbLclhBf25YQcNuVEerblhL/25YS/9uW
        Ev/blhL/25UR6tuWEHDclhBf25URsgAAAAAAAAAAAAAAANqVEpHblRFq2pYRp9uWEv/blhL/25YS/9uW
        Eb/blhG/25YS/9uWEv/blhL/2pYRp9uVEWralRKRAAAAAN6YEC/blhG23JcSc9uWEv/blhL/25YS/9uW
        Ev/alRKf2pUSn9uWEv/blhL/25YS/9uWEv/clxJz25YRtt6YEC/alhGS3pUPRtuVEerblhL/25YS/9uW
        Ev/blhL/2pYR39qWEd/blhL/25YS/9uWEv/blhL/25UR6t6VD0balhGS25USxduUEE/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEo3blBJi25YS/9uWEv/blhL/25YS/9uWEv/blBBP25USxduWEcDclxJz25YS/9uW
        Ev/blhL/25YS/9uWEv/alRLX3ZkRD9qVErzblhL/25YS/9uWEv/blhL/3JcSc9uWEcDblhHA3JcSc9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uVEp3bkgwV25YS1NuWEv/blhL/25YS/9yXEnPblhHA2pUSx92V
        EFLblhL/25YS/9uWEv/alRGk25URzduWEv/blhL/25YRed2VETzblhL/25YS/9uWEv/dlRBS2pUSx9uW
        EZbblRFN25UR6tuWEv/blhL/2ZQRWNyXEG7blhL/25YS/9uWEo3bkhAx25YS/9uWEv/blRHq25URTduW
        EZbemBAv25YRttuWEHDblhL/25YS/9uVEc/mmQAK25YSVduWEmS/gAAI2pUQfduWEv/blhL/25YQcNuW
        EbbemBAvAAAAANqWEYvclhBf2pYRp9uWEv/blhL/25YR3dyVEpHblRGH3JYSu9uWEv/blhL/2pYRp9yW
        EF/alhGLAAAAAAAAAAAAAAAA25URstuVEWrclxJz25UR6tuWEv/blhL/25YS/9uWEv/blRHq3JcSc9uV
        EWrblRGyAAAAAAAAAAAAAAAAAAAAAAAAAADalRKR25YRtt6VD0bblBBP3JcSc9yXEnPblBBP3pUPRtuW
        EbbalRKRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6YEC/alhGS25USxduWEcDblhHA25USxdqW
        EZLemBAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN2ZEQ/blxNd2pYSrNuW
        E87blhLi3JYS9dyWEvXblhLi25YTztqWEqzblxNd3ZkRDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqVEynblhOW25YS8NuW
        Ev/alhLt2pUStdyXEp/clhKK3JYSityXEp/alRK12pYS7duWEv/blhLw25YTltqVEykAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalxGE25YS8duW
        Ev/blROk3ZURWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3ZURWduVE6TblhL/25YS8dqX
        EYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25YSqtuW
        Ev/blhKs2ZYRPQAAAADbmBI525YRhtuWEsXblhPc25YS89uWEvPblhPc25YSxduWEYbbmBI5AAAAANmW
        ET3blhKs25YS/9uWEqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANyW
        Et/blhL/2pUTYAAAAADZlhE925YSrNuWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhKs2ZYRPQAAAADalRNg25YS/9yWEt8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADalhHr25YS/9eXECAAAAAA25YRhduWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YRhQAAAADXlxAg25YS/9qWEesAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA2pYSwtuWEv/clhQzAAAAANuWEsTblhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YSxAAAAADclhQz25YS/9qWEsIAAAAAAAAAAAAA
        AAAAAAAAAAAAANqXEYTblhL/2pURdgAAAADblhHb25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev8AAAAAAAAAANuWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YR2wAAAADalRF225YS/9qX
        EYQAAAAAAAAAAAAAAADalRMp25YS8duWEqwAAAAA2pYRktuWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/wAAAAAAAAAA25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/2pYRkgAA
        AADblhKs25YS8dqVEykAAAAAAAAAANuWE5bblhL/2ZYRPdmWET3blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25cSf9uXEn/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/2ZYRPdmWET3blhL/25YTlgAAAADYiRQN25YS7tyXEp8AAAAA25YSrNuWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhKsAAAAANyXEp/blhLu2IkUDdmUE1HblhL/3ZgRStuUDzLblhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uXEn/blxJ/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blA8y3ZgRStuWEv/ZlBNR25YSqNuVEeoAAAAA25UReNuW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/AAAAAAAAAADblhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uVEXgAAAAA25UR6tuWEqjblhPO2pUStQAA
        AADblhLF25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/alBM3AAAAANyX
        E4nblhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YSxQAAAADalRK125YTztuW
        EuLclxKfAAAAANuWE9zblhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9mV
        EnMAAAAA1JUVDNuWEsXblhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhPcAAAAANyX
        Ep/blhLi3JYS9dyWEooAAAAA25YS89uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/2pYR69yWFDMAAAAA3JUSOtuWEvPblhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        EvMAAAAA3JYSityWEvXclhL13JYSigAAAADblhLz25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/2pYSwuaZGgoAAAAA25YSVduWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS8wAAAADclhKK3JYS9duWEuLclxKfAAAAANuWE9zblhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YSqgAAAAAAAAAA25YSVduWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhPcAAAAANyXEp/blhLi25YTztqVErUAAAAA25YSxduWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YSqgAAAAAAAAAA3JYTl9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEsUAAAAA2pUStduWE87alhKs2pYS7QAAAADblhGG25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/2pYRkgAAAADalBM325YS/9uWEv/blhL/25YS/9uWEv/blhL/2ZURPAAA
        AADblhFc25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YRhgAAAADalhLt2pYSrNuXE13blhL/3ZURWduY
        EjnblhL/25YS/9uWEv/blhL/25YS/9uWEv/alhKnAAAAAOOcDhLblhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhJVAAAAANqVE1LblhL/25YS/9uWEv/blhL/25YS/9uWEv/bmBI53ZURWduWEv/blxNd3ZkRD9uW
        EvDblROkAAAAANuWEqzblhL/25YS/9uWEv/blhL/25YS/9uWErkAAAAAAAAAANuWEqrblhL/25YS/9uW
        Ev/blhL/25YS4QAAAAAAAAAA25YSctuWEv/blhL/25YS/9uWEv/blhL/25YSrAAAAADblROk25YS8N2Z
        EQ8AAAAA25YTltuWEv/ZlhE92ZYRPduWEv/blhL/25YS/9uWEv/blhL/25YS/9uTEEAAAAAA358gCNyW
        EorclhLK25YS9NyXEp/XlxAgAAAAAAAAAADblhKs25YS/9uWEv/blhL/25YS/9uWEv/ZlhE92ZYRPduW
        Ev/blhOWAAAAAAAAAADalRMp25YS8duWEqwAAAAA25YRhduWEv/blhL/25YS/9uWEv/blhL/25YS/9uS
        DyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3ZgRStuWEv/blhL/25YS/9uWEv/blhL/25YRhQAA
        AADblhKs25YS8dqVEykAAAAAAAAAAAAAAADalxGE25YS/9qVE2AAAAAA25YSxNuWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWE3nblxAx35UVGAAAAADdmREe2ZURPNyXErXblhL/25YS/9uWEv/blhL/25YS/9uW
        EsQAAAAA2pUTYNuWEv/alxGEAAAAAAAAAAAAAAAAAAAAAAAAAADblhKq25YS/9eXECAAAAAA25YR29uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhHbAAAAANeXECDblhL/25YSqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADclhLf25YS/9yW
        FDMAAAAA2pYRktuWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/2pYRkgAAAADclhQz25YS/9yWEt8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADalhHr25YS/9qVEXYAAAAA2ZYRPduWEqzblhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YSrNmWET0AAAAA2pURdtuWEv/alhHrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADalhLC25YS/9uWEqzZlhE9AAAAANuUDzLblRF425YSxduWE9zblhLz25YS89uW
        E9zblhLF25UReNuUDzIAAAAA2ZYRPduWEqzblhL/2pYSwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalxGE25YS8duWEv/clxKf3ZgRSgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA3ZgRStyXEp/blhL/25YS8dqXEYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalRMp25YTltuWEu7blhL/25UR6tqV
        ErXclxKf3JYSityWEorclxKf2pUStduVEerblhL/25YS7tuWE5balRMpAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2IkUDdmU
        E1HblhKo25YTztuWEuLclhL13JYS9duWEuLblhPO25YSqNmUE1HYiRQNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>